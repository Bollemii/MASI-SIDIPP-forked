sequenceDiagram
    participant m as Membre
    participant i as Invité

    m ->> i: Envoie une invitation
    i ->> m: Envoie sa clé publique
    m ->> i: Envoie sa clé publique
    m ->> m: Génère le code d'authentification
    m ->> m: Chiffre le code avec la clé publique
    m ->> i: Envoie le code d'authentification chiffré
    i ->> i: Déchiffre le code d'authentification avec sa clé privée
    i ->> i: Chiffre le code déchiffré avec la clé publique du membre
    i ->> m: Envoie le code d'authentification à nouveau chiffré
    m ->> m: Déchiffre le code avec sa clé privée
    alt Le code est identique
        m ->> m: Ajoute le membre à la communauté
        m ->> m: Chiffre la clé symétrique de la communauté avec la clé publique de l'invité
        m ->> i: Envoie une confirmation avec la clé symétrique de la communauté chiffrée
        i ->> i: Déchiffre la clé symétrique de la communauté avec sa clé privée
        m ->> m: Chiffre les informations de la communauté avec la clé symétrique de la communauté
        m ->> i: Envoie les informations de la communauté chiffrées
        i ->> i: Déchiffre les informations de la communauté avec la clé symétrique de la communauté
        i ->> i: Enregistre les informations de la communauté et la clé symétrique
        i ->> m: Envoie un accusé de réception pour informé qu'il a bien reçu les informations
        m ->> m: Chiffre la base de données de la communauté avec la clé symétrique de la communauté
        m ->> i: Envoie la base de données de la communauté chiffrée
        i ->> i: Déchiffre la base de données de la communauté avec la clé symétrique de la communauté
        i ->> i: Enregistre la base de données de la communauté
    else Le code n'est pas identique
        m ->> i: Envoie une infirmation
    end
    